mixin map
  .pratchett-map
    svg.pratchett-map__close: use(xlink:href="#close-icon")
    for column in map
      .pratchett-map__column
        if column.title
          .pratchett-map__title !{column.title}
        for item in column.items
          .pratchett-map__item(data-map=item.id) 
            if item.icon=="science"
              svg.icon: use(xlink:href="#science-icon")
            else if item.icon=="star"
              svg.icon: use(xlink:href="#star-icon")
            else if item.icon!="none"
              svg.icon: use(xlink:href="#circle-icon")
            |!{item.name}



mixin pratchettScheme
  include icons.pug
  .pratchett-scheme
    +bigWave(1)
    +bigWave(2)
    +reversiveSmallWave(1)
    +reversiveBigWave(3)
    .cycles
      each column, index in columns
        .cycles__column(data-column=index+1)
          each cycle, cycleindex in column
            -var className = "cycle" + (cycle.transparent ? " cycle_transparent" : "")
            div(class=className data-cycle=cycle.id data-column-index=cycleindex+1)
              if cycle.books
                each book in cycle.books
                  //.book(data-book = book )
                  .book(data-index=book.index 
                        data-lines=book.lines 
                        data-cycle=(book.cycle ? book.cycle : cycle.id) data-cycle-item)
                    .book__title !{book.title}
                    if book.picture
                      .book__add Иллюстрированный роман
                    if book.science
                      .book__add Научный роман
                    if book.year
                      .book__year !{book.year}
                    if book.separate
                      svg.star: use(xlink:href="#star-icon")
                    if book.relations
                      svg.relations
                        each relation in book.relations
                          path(d=relation.d class=relation.dash ? "dashed" : "")
              if cycle.relations
                svg.relations
                  each relation in cycle.relations
                    path(d=relation.d class=relation.dash ? "dashed" : "")
    +map